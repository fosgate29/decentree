{
  "address": "0xEc7e884e46E92b69b0bd19Bb23E68095235C9f1a",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "treeId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "trustedWallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogAllFundsSentToWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lat",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lng",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct YourContract.LatLng",
          "name": "treeId",
          "type": "tuple"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "firstDepositTimestamp",
          "type": "uint256"
        }
      ],
      "name": "LogDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "treeId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "trustedWallet",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogFundsSentToWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "contributor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "treeId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "LogRefunded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "LogVaultCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DONATION_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ONE_YEAR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lat",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lng",
          "type": "uint256"
        }
      ],
      "name": "depositValue",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "address",
          "name": "treeOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "firstDepositTimestamp",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nextDisbursement",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lat",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lng",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getLocationList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "treeOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "firstDepositTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextDisbursement",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lat",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lng",
              "type": "uint256"
            }
          ],
          "internalType": "struct YourContract.TreeDeposit[]",
          "name": "treeDeposits",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getONE_YEAR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lat",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lng",
          "type": "uint256"
        }
      ],
      "name": "getTreeDeposit",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "treeOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "firstDepositTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "nextDisbursement",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lat",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lng",
              "type": "uint256"
            }
          ],
          "internalType": "struct YourContract.TreeDeposit",
          "name": "treeDeposit",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lat",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lng",
          "type": "uint256"
        }
      ],
      "name": "getTreeId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "treeId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lat",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lng",
          "type": "uint256"
        }
      ],
      "name": "refund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "lat",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lng",
          "type": "uint256"
        }
      ],
      "name": "sendFundsToWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "lat",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lng",
              "type": "uint256"
            }
          ],
          "internalType": "struct YourContract.LatLng",
          "name": "location",
          "type": "tuple"
        }
      ],
      "name": "setLocation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setLocationForTests",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "trustedWallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x6bf0ddf912adc54b9f88141a471283df3dc55a3bd9587e1f465bf8c8d0a4ccc4",
  "receipt": {
    "to": null,
    "from": "0x1fE926205440d6A61119d231FA28e1519514E2E5",
    "contractAddress": "0xEc7e884e46E92b69b0bd19Bb23E68095235C9f1a",
    "transactionIndex": 151,
    "gasUsed": "1014781",
    "logsBloom": "0x
    "blockHash": "0xe0aaf20a4bc87b5c0f04adf086922e7de9cbe9c2aab367526517b2044f94c850",
    "transactionHash": "0x6bf0ddf912adc54b9f88141a471283df3dc55a3bd9587e1f465bf8c8d0a4ccc4",
    "logs": [],
    "blockNumber": 5564749,
    "cumulativeGasUsed": "23536060",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "75be19b4bc489d83e221787ce5f4b3ed",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"treeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trustedWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogAllFundsSentToWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lng\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct YourContract.LatLng\",\"name\":\"treeId\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"firstDepositTimestamp\",\"type\":\"uint256\"}],\"name\":\"LogDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"treeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trustedWallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogFundsSentToWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"treeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LogRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"LogVaultCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DONATION_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ONE_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lng\",\"type\":\"uint256\"}],\"name\":\"depositValue\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"treeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"firstDepositTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextDisbursement\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lng\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getLocationList\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"treeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"firstDepositTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextDisbursement\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lng\",\"type\":\"uint256\"}],\"internalType\":\"struct YourContract.TreeDeposit[]\",\"name\":\"treeDeposits\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getONE_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lng\",\"type\":\"uint256\"}],\"name\":\"getTreeDeposit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"treeOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"firstDepositTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nextDisbursement\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lng\",\"type\":\"uint256\"}],\"internalType\":\"struct YourContract.TreeDeposit\",\"name\":\"treeDeposit\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lng\",\"type\":\"uint256\"}],\"name\":\"getTreeId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"treeId\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lng\",\"type\":\"uint256\"}],\"name\":\"refund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"lat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lng\",\"type\":\"uint256\"}],\"name\":\"sendFundsToWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"lat\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lng\",\"type\":\"uint256\"}],\"internalType\":\"struct YourContract.LatLng\",\"name\":\"location\",\"type\":\"tuple\"}],\"name\":\"setLocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setLocationForTests\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"trustedWallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used for storing funds.\",\"kind\":\"dev\",\"methods\":{\"refund(uint256,uint256)\":{\"details\":\"Refunds ether to the contributors if in the contributors wants funds back.\"},\"sendFundsToWallet(uint256,uint256)\":{\"details\":\"Sends the disbursement amount to the wallet after the disbursement period has passed. Can be called by anyone.\"}},\"title\":\"Vault\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/YourContract.sol\":\"YourContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/YourContract.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\n// Adapted from Open Zeppelin's RefundVault\\n\\n/**\\n * @title Vault\\n * @dev This contract is used for storing funds.\\n */\\ncontract YourContract {\\n\\tstruct TreeDeposit {\\n\\t\\taddress treeOwner; //who is contributing to the farmer\\n\\t\\tuint256 firstDepositTimestamp;\\n\\t\\tuint256 nextDisbursement;\\n\\t\\tuint256 balance;\\n\\t\\tuint256 lat;\\n\\t\\tuint256 lng;\\n\\t}\\n\\n\\tstruct LatLng {\\n\\t\\tuint256 lat;\\n\\t\\tuint256 lng;\\n\\t}\\n\\n\\t// Wallet from the project team\\n\\taddress payable public trustedWallet;\\n\\n\\tmapping(bytes32 => TreeDeposit) public deposits;\\n\\tmapping(address => LatLng[]) private locations;\\n\\n\\tuint256 public constant ONE_YEAR = 2; // for tests. correct value is 365 days\\n\\tuint256 public constant DONATION_VALUE = 1000; // 1000 wei for tests. correct value is 1 Ether\\n\\n\\tevent LogVaultCreated(address indexed wallet);\\n\\tevent LogDeposited(\\n\\t\\taddress indexed contributor,\\n\\t\\tLatLng treeId,\\n\\t\\tuint256 amount,\\n\\t\\tuint256 firstDepositTimestamp\\n\\t);\\n\\tevent LogRefunded(\\n\\t\\taddress indexed contributor,\\n\\t\\tbytes32 treeId,\\n\\t\\tuint256 amount\\n\\t);\\n\\tevent LogFundsSentToWallet(\\n\\t\\tbytes32 indexed treeId,\\n\\t\\taddress trustedWallet,\\n\\t\\tuint256 amount\\n\\t);\\n\\tevent LogAllFundsSentToWallet(\\n\\t\\tbytes32 indexed treeId,\\n\\t\\taddress trustedWallet,\\n\\t\\tuint256 amount\\n\\t);\\n\\n\\tconstructor() {\\n\\t\\ttrustedWallet = payable(0x1fE926205440d6A61119d231FA28e1519514E2E5);\\n\\t}\\n\\n\\t// Donator deposits a value. Donator can refund remain amount at any time\\n\\tfunction depositValue(uint256 lat, uint256 lng) external payable {\\n\\t\\t//check if tree is available\\n\\t\\tbytes32 _treeId = getTreeId(lat, lng);\\n\\t\\tTreeDeposit memory deposit = deposits[_treeId];\\n\\n\\t\\trequire(deposit.treeOwner == address(0), \\\"Tree must not have an owner\\\");\\n\\t\\trequire(deposit.balance == 0, \\\"Tree balance must be zero.\\\");\\n\\n\\t\\trequire(\\n\\t\\t\\tmsg.value == DONATION_VALUE,\\n\\t\\t\\t\\\"Each tree must cost DONATION_VALUE\\\"\\n\\t\\t);\\n\\n\\t\\tuint256 amount = msg.value;\\n\\t\\tuint256 fee_10percent = amount / 10;\\n\\t\\tuint256 remain = amount - fee_10percent;\\n\\n\\t\\ttrustedWallet.transfer(fee_10percent); //first, transfer 10% to trusted wallet\\n\\n\\t\\tdeposits[_treeId] = TreeDeposit({\\n\\t\\t\\ttreeOwner: msg.sender,\\n\\t\\t\\tfirstDepositTimestamp: block.timestamp,\\n\\t\\t\\tnextDisbursement: (block.timestamp + ONE_YEAR),\\n\\t\\t\\tbalance: remain,\\n\\t\\t\\tlat: lat,\\n\\t\\t\\tlng: lng\\n\\t\\t});\\n\\n\\t\\tlocations[msg.sender].push(LatLng({ lat: lat, lng: lng }));\\n\\n\\t\\temit LogDeposited(\\n\\t\\t\\tmsg.sender,\\n\\t\\t\\tLatLng({ lat: lat, lng: lng }),\\n\\t\\t\\tmsg.value,\\n\\t\\t\\tblock.timestamp\\n\\t\\t);\\n\\t}\\n\\n\\tfunction getTreeId(\\n\\t\\tuint256 lat,\\n\\t\\tuint256 lng\\n\\t) public pure returns (bytes32 treeId) {\\n\\t\\treturn keccak256(abi.encodePacked(lat, lng));\\n\\t}\\n\\n\\t/// @dev Refunds ether to the contributors if in the contributors wants funds back.\\n\\tfunction refund(uint256 lat, uint256 lng) external {\\n\\t\\tbytes32 _treeId = getTreeId(lat, lng);\\n\\t\\tTreeDeposit storage deposit = deposits[_treeId];\\n\\n\\t\\trequire(\\n\\t\\t\\tdeposit.balance > 0,\\n\\t\\t\\t\\\"Refund not allowed if deposit balance is 0.\\\"\\n\\t\\t);\\n\\t\\trequire(\\n\\t\\t\\tdeposit.treeOwner == msg.sender,\\n\\t\\t\\t\\\"Only owner of the deposit can request a refund.\\\"\\n\\t\\t);\\n\\t\\tuint256 refundAmount = deposit.balance; //will refund what is lefted\\n\\n\\t\\tdeposit.balance = 0;\\n\\n\\t\\t(bool success, ) = msg.sender.call{ value: refundAmount }(\\\"\\\");\\n\\t\\trequire(success, \\\"Transfer failed.\\\");\\n\\n\\t\\temit LogRefunded(deposit.treeOwner, _treeId, refundAmount);\\n\\t}\\n\\n\\t/// @dev Sends the disbursement amount to the wallet after the disbursement period has passed. Can be called by anyone.\\n\\tfunction sendFundsToWallet(uint256 lat, uint256 lng) external {\\n\\t\\tbytes32 _treeId = getTreeId(lat, lng);\\n\\t\\tTreeDeposit storage deposit = deposits[_treeId];\\n\\n\\t\\trequire(\\n\\t\\t\\tdeposit.nextDisbursement <= block.timestamp,\\n\\t\\t\\t\\\"Next disbursement period timestamp has not yet passed, too early to withdraw.\\\"\\n\\t\\t);\\n\\t\\trequire(deposit.balance > 0, \\\"TreeDeposit balance is 0.\\\");\\n\\n\\t\\tif (\\n\\t\\t\\tblock.timestamp > deposit.nextDisbursement &&\\n\\t\\t\\tblock.timestamp < deposit.firstDepositTimestamp + 10 * (ONE_YEAR)\\n\\t\\t) {\\n\\t\\t\\tuint256 initialDeposited = DONATION_VALUE;\\n\\t\\t\\tuint256 fee_10percent = initialDeposited / 10;\\n\\t\\t\\tuint256 remain = deposit.balance - fee_10percent;\\n\\t\\t\\tdeposit.balance = remain;\\n\\t\\t\\tdeposit.nextDisbursement = deposit.nextDisbursement + ONE_YEAR;\\n\\t\\t\\ttrustedWallet.transfer(fee_10percent);\\n\\t\\t\\temit LogFundsSentToWallet(_treeId, trustedWallet, fee_10percent);\\n\\t\\t}\\n\\t\\t//if more than 10 years has passed, all funds can be collected\\n\\t\\telse if (\\n\\t\\t\\tblock.timestamp >= deposit.firstDepositTimestamp + 10 * (ONE_YEAR)\\n\\t\\t) {\\n\\t\\t\\tuint256 allFunds = deposit.balance;\\n\\t\\t\\tdeposit.balance = 0;\\n\\t\\t\\ttrustedWallet.transfer(allFunds);\\n\\t\\t\\temit LogAllFundsSentToWallet(_treeId, trustedWallet, allFunds);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction getTreeDeposit(\\n\\t\\tuint256 lat,\\n\\t\\tuint256 lng\\n\\t) external view returns (TreeDeposit memory treeDeposit) {\\n\\t\\treturn deposits[getTreeId(lat, lng)];\\n\\t}\\n\\n\\tfunction getLocationList(\\n\\t\\taddress _address\\n\\t) public view returns (TreeDeposit[] memory treeDeposits) {\\n\\t\\tLatLng[] memory latlngs = locations[_address];\\n\\t\\tuint256 size = latlngs.length;\\n\\t\\ttreeDeposits = new TreeDeposit[](size);\\n\\t\\tfor (uint256 i = 0; i < size; i++) {\\n\\t\\t\\tuint256 lat = locations[_address][i].lat;\\n\\t\\t\\tuint256 lng = locations[_address][i].lng;\\n\\t\\t\\tbytes32 key = getTreeId(lat, lng);\\n\\t\\t\\tTreeDeposit memory treeDeposit = deposits[key];\\n\\t\\t\\ttreeDeposits[i] = treeDeposit;\\n\\t\\t}\\n\\t}\\n\\n\\tfunction getONE_YEAR() public pure returns (uint256) {\\n\\t\\treturn ONE_YEAR;\\n\\t}\\n\\n\\tfunction setLocation(address userAddress, LatLng calldata location) public {\\n\\t\\tlocations[userAddress].push(location);\\n\\t}\\n\\n\\tfunction setLocationForTests() external {\\n\\t\\tlocations[msg.sender].push(LatLng({ lat: 167490351, lng: 438709075 }));\\n\\t\\tlocations[msg.sender].push(LatLng({ lat: 167490371, lng: 438709095 }));\\n\\t\\tlocations[msg.sender].push(LatLng({ lat: 167490391, lng: 438709105 }));\\n\\t\\tlocations[msg.sender].push(LatLng({ lat: 167490401, lng: 438709165 }));\\n\\t}\\n}\\n\",\"keccak256\":\"0xcc1026c45051ffb0340b45fbca06f5df6474698e37295d25d025da6b334df045\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916731fe926205440d6a61119d231fa28e1519514e2e51790556110fb806100466000396000f3fe6080604052600436106100c25760003560e01c80637f44ec9c1161007f578063a08a3f8b11610059578063a08a3f8b14610341578063ce4db26714610361578063db174f051461038e578063f5bdf2cc146103ae57600080fd5b80637f44ec9c14610204578063995080e314610231578063a024b60f1461032b57600080fd5b806316b19c86146100c757806316d3bfbb146100dc5780633d4dff7b146101045780635243c98a14610198578063570d2f8f146101ac5780635af36e3e146101e4575b600080fd5b6100da6100d5366004610eb7565b6103ce565b005b3480156100e857600080fd5b506100f1600281565b6040519081526020015b60405180910390f35b34801561011057600080fd5b5061016161011f366004610ed9565b60016020819052600091825260409091208054918101546002820154600383015460048401546005909401546001600160a01b03909516949293919290919086565b604080516001600160a01b0390971687526020870195909552938501929092526060840152608083015260a082015260c0016100fb565b3480156101a457600080fd5b5060026100f1565b3480156101b857600080fd5b506000546101cc906001600160a01b031681565b6040516001600160a01b0390911681526020016100fb565b3480156101f057600080fd5b506100da6101ff366004610eb7565b6106ec565b34801561021057600080fd5b5061022461021f366004610eb7565b6108c6565b6040516100fb9190610f32565b34801561023d57600080fd5b506100da336000908152600260208181526040808420815180830183526309fbb32f8152631a262b5381850190815282546001818101855584895286892093519188028401918255915190820155858552835180850185526309fbb3438152631a262b6781870190815284548084018655858a52915191880284019182555190820155858552835180850185526309fbb3578152631a262b7181870190815284548084018655858a5291519188028401918255519082015585855283518085019094526309fbb3618452631a262bad9484019485528254808201845592909652915193020191825551910155565b34801561033757600080fd5b506100f16103e881565b34801561034d57600080fd5b506100da61035c366004610f5c565b610942565b34801561036d57600080fd5b5061038161037c366004610f9b565b61098c565b6040516100fb9190610fbd565b34801561039a57600080fd5b506100f16103a9366004610eb7565b610b96565b3480156103ba57600080fd5b506100da6103c9366004610eb7565b610bc2565b60006103da8383610b96565b600081815260016020818152604092839020835160c08101855281546001600160a01b03168082529382015492810192909252600281015493820193909352600383015460608201526004830154608082015260059092015460a0830152919250901561048e5760405162461bcd60e51b815260206004820152601b60248201527f54726565206d757374206e6f74206861766520616e206f776e6572000000000060448201526064015b60405180910390fd5b6060810151156104e05760405162461bcd60e51b815260206004820152601a60248201527f547265652062616c616e6365206d757374206265207a65726f2e0000000000006044820152606401610485565b6103e8341461053c5760405162461bcd60e51b815260206004820152602260248201527f456163682074726565206d75737420636f737420444f4e4154494f4e5f56414c604482015261554560f01b6064820152608401610485565b34600061054a600a83611021565b905060006105588284611043565b600080546040519293506001600160a01b03169184156108fc0291859190818181858888f19350505050158015610593573d6000803e3d6000fd5b506040518060c00160405280336001600160a01b031681526020014281526020016002426105c19190611056565b8152602080820184905260408083018b905260609283018a905260008981526001808452828220865181546001600160a01b039091166001600160a01b03199091161781558685015181830155868401516002808301919091559587015160038201556080870151600482015560a09096015160059096019590955533808252848452828220835180850185528e81528086018e81528254808a0184559285529386902090519190960290950194855590519390940192909255815180830183528a815290810189905290517ff78d3385f6643a4e3fe693b655a96484203ea64b1a506fe7e40f6689150051c6916106db913490429083518152602093840151938101939093526040830191909152606082015260800190565b60405180910390a250505050505050565b60006106f88383610b96565b600081815260016020526040902060038101549192509061076f5760405162461bcd60e51b815260206004820152602b60248201527f526566756e64206e6f7420616c6c6f776564206966206465706f73697420626160448201526a3630b731b29034b990181760a91b6064820152608401610485565b80546001600160a01b031633146107e05760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c79206f776e6572206f6620746865206465706f7369742063616e20726560448201526e38bab2b9ba1030903932b33ab7321760891b6064820152608401610485565b600381018054600091829055604051909190339083908381818185875af1925050503d806000811461082e576040519150601f19603f3d011682016040523d82523d6000602084013e610833565b606091505b50509050806108775760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606401610485565b825460408051868152602081018590526001600160a01b03909216917f75df69821f6f022ffb01f4bb4867befe213ea726d389cb5ab413a4cd498770c4910160405180910390a2505050505050565b6108ce610e78565b600160006108dc8585610b96565b81526020808201929092526040908101600020815160c08101835281546001600160a01b0316815260018201549381019390935260028101549183019190915260038101546060830152600481015460808301526005015460a082015290505b92915050565b6001600160a01b0382166000908152600260208181526040832080546001810182559084529220839290910201610986828281358155602082013560018201555050565b50505050565b6001600160a01b0381166000908152600260209081526040808320805482518185028101850190935280835260609493849084015b82821015610a07578382906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050815260200190600101906109c1565b505082519293508291505067ffffffffffffffff811115610a2a57610a2a611069565b604051908082528060200260200182016040528015610a6357816020015b610a50610e78565b815260200190600190039081610a485790505b50925060005b81811015610b8e576001600160a01b0385166000908152600260205260408120805483908110610a9b57610a9b61107f565b60009182526020808320600292830201546001600160a01b038a1684529190526040822080549193509084908110610ad557610ad561107f565b90600052602060002090600202016001015490506000610af58383610b96565b600081815260016020818152604092839020835160c08101855281546001600160a01b031681529281015491830191909152600281015492820192909252600382015460608201526004820154608082015260059091015460a08201528851919250908190899087908110610b6c57610b6c61107f565b6020026020010181905250505050508080610b8690611095565b915050610a69565b505050919050565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b6000610bce8383610b96565b6000818152600160205260409020600281015491925090421015610c705760405162461bcd60e51b815260206004820152604d60248201527f4e6578742064697362757273656d656e7420706572696f642074696d6573746160448201527f6d7020686173206e6f7420796574207061737365642c20746f6f206561726c7960648201526c103a37903bb4ba34323930bb9760991b608482015260a401610485565b6000816003015411610cc45760405162461bcd60e51b815260206004820152601960248201527f547265654465706f7369742062616c616e636520697320302e000000000000006044820152606401610485565b806002015442118015610cf05750610cde6002600a6110ae565b8160010154610ced9190611056565b42105b15610dc1576103e86000610d05600a83611021565b90506000818460030154610d199190611043565b60038501819055600280860154919250610d3291611056565b6002850155600080546040516001600160a01b039091169184156108fc02918591818181858888f19350505050158015610d70573d6000803e3d6000fd5b50600054604080516001600160a01b0390921682526020820184905286917fd2168b74baf184597c19f64970fbe390b83f311195de255091227487ccacc6e1910160405180910390a2505050610986565b610dcd6002600a6110ae565b8160010154610ddc9190611056565b421061098657600381018054600091829055815460405191926001600160a01b039091169183156108fc0291849190818181858888f19350505050158015610e28573d6000803e3d6000fd5b50600054604080516001600160a01b0390921682526020820183905284917f08ea1c3868dfd24fbac9e1cb0744ba6b53e840f5dde9df9ce53f77f1d39b1307910160405180910390a25050505050565b6040518060c0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b60008060408385031215610eca57600080fd5b50508035926020909101359150565b600060208284031215610eeb57600080fd5b5035919050565b80516001600160a01b031682526020808201519083015260408082015190830152606080820151908301526080808201519083015260a090810151910152565b60c0810161093c8284610ef2565b80356001600160a01b0381168114610f5757600080fd5b919050565b6000808284036060811215610f7057600080fd5b610f7984610f40565b92506040601f1982011215610f8d57600080fd5b506020830190509250929050565b600060208284031215610fad57600080fd5b610fb682610f40565b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610fff57610fec838551610ef2565b9284019260c09290920191600101610fd9565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b60008261103e57634e487b7160e01b600052601260045260246000fd5b500490565b8181038181111561093c5761093c61100b565b8082018082111561093c5761093c61100b565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000600182016110a7576110a761100b565b5060010190565b808202811582820484141761093c5761093c61100b56fea26469706673582212205a3c67b3a1880e4ec27da1586aa2b571b1525141420ebbd7bd9a6fccf6fb346364736f6c63430008110033",
  "deployedBytecode": "",
  "devdoc": {
    "details": "This contract is used for storing funds.",
    "kind": "dev",
    "methods": {
      "refund(uint256,uint256)": {
        "details": "Refunds ether to the contributors if in the contributors wants funds back."
      },
      "sendFundsToWallet(uint256,uint256)": {
        "details": "Sends the disbursement amount to the wallet after the disbursement period has passed. Can be called by anyone."
      }
    },
    "title": "Vault",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 22,
        "contract": "contracts/YourContract.sol:YourContract",
        "label": "trustedWallet",
        "offset": 0,
        "slot": "0",
        "type": "t_address_payable"
      },
      {
        "astId": 27,
        "contract": "contracts/YourContract.sol:YourContract",
        "label": "deposits",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(TreeDeposit)15_storage)"
      },
      {
        "astId": 33,
        "contract": "contracts/YourContract.sol:YourContract",
        "label": "locations",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_struct(LatLng)20_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(LatLng)20_storage)dyn_storage": {
        "base": "t_struct(LatLng)20_storage",
        "encoding": "dynamic_array",
        "label": "struct YourContract.LatLng[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_array(t_struct(LatLng)20_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct YourContract.LatLng[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(LatLng)20_storage)dyn_storage"
      },
      "t_mapping(t_bytes32,t_struct(TreeDeposit)15_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct YourContract.TreeDeposit)",
        "numberOfBytes": "32",
        "value": "t_struct(TreeDeposit)15_storage"
      },
      "t_struct(LatLng)20_storage": {
        "encoding": "inplace",
        "label": "struct YourContract.LatLng",
        "members": [
          {
            "astId": 17,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "lat",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 19,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "lng",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(TreeDeposit)15_storage": {
        "encoding": "inplace",
        "label": "struct YourContract.TreeDeposit",
        "members": [
          {
            "astId": 4,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "treeOwner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 6,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "firstDepositTimestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 8,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "nextDisbursement",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 10,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "balance",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 12,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "lat",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 14,
            "contract": "contracts/YourContract.sol:YourContract",
            "label": "lng",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}